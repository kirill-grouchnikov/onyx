<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="onyx" default="all">
	<property file="local.build.properties" />
	<property file="build.properties" />

	<!-- Compiler options -->
	<patternset id="javac.excluded" />
	<patternset id="javac.resources">
		<include name="**/?*.txt" />
		<include name="**/?*.license" />
	</patternset>
	<!-- JDK definitions -->

	<path id="jdk.classpath">
		<fileset dir="${jdk.home}">
			<include name="jre/lib/charsets.jar" />
			<include name="jre/lib/deploy.jar" />
			<include name="jre/lib/javaws.jar" />
			<include name="jre/lib/jce.jar" />
			<include name="jre/lib/jsse.jar" />
			<include name="jre/lib/plugin.jar" />
			<include name="jre/lib/rt.jar" />
			<include name="jre/lib/ext/dnsns.jar" />
			<include name="jre/lib/ext/localedata.jar" />
			<include name="jre/lib/ext/sunjce_provider.jar" />
			<include name="jre/lib/ext/sunpkcs11.jar" />
		</fileset>
	</path>

	<property name="project.jdk.home" value="${jdk.home}" />
	<property name="project.jdk.classpath" value="jdk.classpath" />
	<!-- Project Libraries -->
	<!-- Global Libraries -->

	<dirname property="module.onyx.basedir" file="${ant.file}" />

	<property name="javac.args.onyx" value="${javac.args}" />

	<property name="onyx.build.dir" value="${module.onyx.basedir}/build/" />
	<property name="onyx.output.dir" value="${onyx.build.dir}/classes" />
	<property name="onyx.drop.dir" value="${module.onyx.basedir}/drop" />
	<property name="onyx.lib.dir" value="${module.onyx.basedir}/lib" />
	<property name="onyx.src.dir" value="${module.onyx.basedir}/src/" />

	<path id="onyx.module.bootclasspath">
		<!-- Paths to be included in compilation bootclasspath -->
	</path>

	<property name="module.jdk.home.onyx" value="${project.jdk.home}" />
	<property name="module.jdk.classpath.onyx" value="${project.jdk.classpath}" />

	<path id="onyx.module.classpath">
		<path refid="${module.jdk.classpath.onyx}" />
		<pathelement location="${module.onyx.basedir}/../trident/drop/trident.jar" />
		<pathelement location="${onyx.lib.dir}/jdom.jar" />
	</path>

	<patternset id="excluded.from.module.onyx" />

	<patternset id="excluded.from.compilation.onyx">
		<patternset refid="excluded.from.module.onyx" />
		<patternset refid="javac.excluded" />
	</patternset>

	<path id="onyx.module.sourcepath">
		<dirset dir="${onyx.src.dir}">
			<include name="org" />
		</dirset>
	</path>

<!--	
    <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
    </taskdef>

	<target name="generate.amazon.jar">
		<delete dir="${module.onyx.basedir}/amazontemp" />
		<wsimport wsdl="http://ecs.amazonaws.com/AWSECommerceService/AWSECommerceService.wsdl" sourcedestdir="${module.onyx.basedir}/amazontemp/src" destdir="${module.onyx.basedir}/amazontemp/classes" package="com.ECS.client.jax" />
		<delete file="${onyx.lib.dir}/amazon.jar" />
		<jar compress="true" destfile="${onyx.lib.dir}/amazon.jar">
			<fileset dir="${module.onyx.basedir}/amazontemp/classes" />
		</jar>
        <delete dir="${module.onyx.basedir}/amazontemp" />
	</target>
-->
	
	<target name="compile.module.onyx" depends="compile.module.onyx.production" description="compile module onyx" />

	<target name="compile.module.onyx.production" description="compile module onyx production classes">
		<mkdir dir="${onyx.output.dir}" />
		<javac source="${javac.source}" target="${javac.target}" encoding="${javac.encoding}" destdir="${onyx.output.dir}" debug="${javac.debug}" nowarn="${javac.generate.no.warnings}" memoryMaximumSize="${javac.max.memory}" fork="true" executable="${module.jdk.home.onyx}/bin/javac">
			<compilerarg line="${javac.args.onyx}" />
			<bootclasspath refid="onyx.module.bootclasspath" />
			<classpath refid="onyx.module.classpath" />
			<src refid="onyx.module.sourcepath" />
			<patternset refid="excluded.from.compilation.onyx" />
		</javac>
		<copy todir="${onyx.output.dir}">
			<fileset dir="${onyx.src.dir}">
				<patternset refid="javac.resources" />
				<type type="file" />
				<patternset refid="excluded.from.compilation.onyx" />
			</fileset>
		</copy>
	</target>

	<target name="clean.module.onyx" description="cleanup module">
		<delete dir="${onyx.output.dir}" />
	</target>

	<target name="init" description="Build initialization">
		<!-- Perform any build initialization in this target -->
	</target>

	<target name="jar-bin" description="create runtime jar">
		<mkdir dir="${onyx.drop.dir}" />
		<delete file="${onyx.drop.dir}/onyx.jar" />
		<jar compress="true" destfile="${onyx.drop.dir}/onyx.jar">
			<fileset dir="${onyx.output.dir}/" />
			<manifest>
				<attribute name="onyx-BuildStamp" value="${build.time}" />
				<attribute name="Main-Class" value="org.pushingpixels.onyx.DemoApp" />
				<attribute name="Class-Path" value="onyx.jar ../../trident/drop/trident.jar ../lib/amazon.jar" />
			</manifest>
		</jar>
	</target>

	<target name="distro" description="create distribution">
		<delete file="${module.onyx.basedir}/onyx-all.zip" />
		<zip destfile="${module.onyx.basedir}/onyx-all.zip" compress="true">
			<fileset dir="${module.onyx.basedir}">
                <include name="src/**" />
                <include name="lib/**" />
				<include name="build*.xml" />
				<include name="build*.properties" />
			</fileset>
		</zip>
	</target>

	<target name="timestamp">
		<tstamp>
			<format property="build.time" pattern="MMMM d, yyyy hh:mm:ss z" />
		</tstamp>
		<echo message="Beginning build: ${build.time}" />
		<echo message="Java home: ${java.home}" />
		<echo message="Java version: ${ant.java.version}" />
		<echo message="Ant version: ${ant.version}" />
		<echo message="JavaC home: ${jdk.home}" />
	</target>

	<target name="jar" depends="jar-bin" description="create all jars" />

	<target name="clean" depends="clean.module.onyx" description="cleanup all" />

	<target name="all" depends="timestamp, init, clean, compile.module.onyx, jar, distro" description="build all" />
</project>